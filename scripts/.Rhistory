mutate(
onset_value = pMTGL_univariatecluster #update ROIs here
)
View(onset_value)
onset_value <- cbind(onset_value[3],onset_value[5],onset_value[28])
timeseries_scaled <- merge(timeseries_other, onset_value, by.x=c("SUBID","Stim"), by.y=c("SUBID", "Stim"))
timeseries_scaled <- merge(timeseries, onset_value, by.x=c("SUBID","Stim"), by.y=c("SUBID", "Stim"))
timeseries_scaled <-
timeseries_scaled %>%
group_by(SUBID, Stim) %>%
mutate(
scaled = ((pMTGL_univariatecluster - onset_value)/sd(pMTGL_univariatecluster)) #update ROIs here
) %>%
subset((seconds) >=6) %>%
subset((seconds) <= 8)
test<-lmer(pMTGR_univariatecluster_scaled*vocal~older_younger + (1|SUBID), data=time_seriespeak) #random intercepts
test<-lmer(pMTGR_univariatecluster_scaled~older_younger*vocal + (1|SUBID), data=time_seriespeak) #random intercepts
summary(test)
timeseries_scaled <-
timeseries_scaled %>%
group_by(SUBID, Stim) %>%
mutate(
scaled = ((pMTGL_univariatecluster - onset_value)/sd(pMTGL_univariatecluster)) #update ROIs here
) %>%
subset((seconds) >=6) %>%
subset((seconds) <= 8)
timeseries_scaled <-
timeseries_scaled %>%
group_by(SUBID, Stim) %>%
mutate(
scaled = ((pMTGL_univariatecluster - onset_value)/sd(pMTGL_univariatecluster)) #update ROIs here
)
timeseries_scaled_peak <- timeseries_scaled %>%
subset((seconds) >=6) %>%
subset((seconds) <= 8)
#get scaled values - pMTGR
onset_value <-
timeseries %>%
group_by(SUBID) %>%
subset(seconds==0.475) %>%
mutate(
onset_value = pMTGR_univariatecluster
)
onset_value <- cbind(onset_value[3],onset_value[5],onset_value[28])
timeseries_scaled <- merge(timeseries_scaled, onset_value, by.x=c("SUBID","Stim"), by.y=c("SUBID", "Stim"))
#get scaled values - pMTGL
onset_value <-
timeseries %>%
group_by(SUBID) %>%
subset(seconds==0.475) %>%
mutate(
onset_value = pMTGL_univariatecluster #update ROIs here
)
onset_value <- cbind(onset_value[3],onset_value[5],onset_value[28])
timeseries_scaled <- merge(timeseries, onset_value, by.x=c("SUBID","Stim"), by.y=c("SUBID", "Stim"))
timeseries_scaled <-
timeseries_scaled %>%
group_by(SUBID, Stim) %>%
mutate(
pMTGL_univariatecluster_scaled = ((pMTGL_univariatecluster - onset_value)/sd(pMTGL_univariatecluster)) #update ROIs here
)
#get scaled values - pMTGR
onset_value <-
timeseries %>%
group_by(SUBID) %>%
subset(seconds==0.475) %>%
mutate(
onset_value = pMTGR_univariatecluster
)
onset_value <- cbind(onset_value[3],onset_value[5],onset_value[28])
timeseries_scaled <- merge(timeseries_scaled, onset_value, by.x=c("SUBID","Stim"), by.y=c("SUBID", "Stim"))
timeseries_scaled <-
timeseries_scaled %>%
group_by(SUBID, Stim) %>%
mutate(
pMTGR_univariatecluster_scaled = ((pMTGR_univariatecluster - onset_value)/sd(pMTGR_univariatecluster))
)
#get scaled values - pMTGL
onset_value <-
timeseries %>%
group_by(SUBID) %>%
subset(seconds==0.475) %>%
mutate(
onset_value = pMTGL_univariatecluster #update ROIs here
)
onset_value <- cbind(onset_value[3],onset_value[5],onset_value[28])
timeseries_scaled <- merge(timeseries, onset_value, by.x=c("SUBID","Stim"), by.y=c("SUBID", "Stim"))
timeseries_scaled <-
timeseries_scaled %>%
group_by(SUBID, Stim) %>%
mutate(
pMTGL_univariatecluster_scaled = ((pMTGL_univariatecluster - onset_value)/sd(pMTGL_univariatecluster)) #update ROIs here
)
#get scaled values - pMTGR
onset_value <-
timeseries %>%
group_by(SUBID) %>%
subset(seconds==0.475) %>%
mutate(
onset_value = pMTGR_univariatecluster
)
onset_value <- cbind(onset_value[3],onset_value[5],onset_value[28])
timeseries_scaled <- merge(timeseries_scaled, onset_value, by.x=c("SUBID","Stim"), by.y=c("SUBID", "Stim"))
timeseries_scaled <-
timeseries_scaled %>%
group_by(SUBID, Stim) %>%
mutate(
pMTGR_univariatecluster_scaled = ((pMTGR_univariatecluster - onset_value.y)/sd(pMTGR_univariatecluster))
)
timeseries_scaled_peak <- timeseries_scaled %>%
subset((seconds) >=6) %>%
subset((seconds) <= 8)
#merge MIR features w/ MIR peaks
MIR_timeseries <- merge(timeseries_scaled_peak, MIR, by="Stim")
test<-lmer(pMTGR_univariatecluster_scaled~older_younger + (1|SUBID), data=timeseries_scaled_peak) #random intercepts
summary(test)
test<-lmer(pMTGR_univariatecluster_scaled~older_younger*vocal + (1|SUBID), data=timeseries_scaled_peak) #random intercepts
summary(test)
test<-lmer(pMTGL_univariatecluster_scaled~older_younger*vocal + (1|SUBID), data=timeseries_scaled_peak) #random intercepts
summary(test)
#sex comparison
test<-lmer(pMTGL_univariatecluster_scaled~sex + (1|SUBID), data=timeseries_scaled_peak) #random intercepts
summary(test)
#sex comparison
test<-lmer(pMTGL_univariatecluster_scaled~sex*vocal + (1|SUBID), data=timeseries_scaled_peak) #random intercepts
summary(test)
## doing roi-analyses for all music (i.e. vocal v non-vocal)
timeseries_other <- subset(timeseries_scaled_peak, self_other=="other")
label<-
expand.grid(
vocal=c("Nonvocal", "Vocal"),
seconds=12
)
label$scaled <- ifelse(label$vocal=="Vocal", 1.25, 0.25)
timeseries_stimother$vocal <- ifelse(timeseries_stimother$vocal=="Y", "Vocal", "Nonvocal")
timeseries_stimother$vocal <- ifelse(timeseries_scaled_peak$vocal=="Y", "Vocal", "Nonvocal")
## doing roi-analyses for all music (i.e. vocal v non-vocal)
timeseries_other <- subset(timeseries_scaled_peak, self_other=="other")
label<-
expand.grid(
vocal=c("Nonvocal", "Vocal"),
seconds=12
)
label$scaled <- ifelse(label$vocal=="Vocal", 1.25, 0.25)
timeseries_stimother$vocal <- ifelse(timeseries_other$vocal=="Y", "Vocal", "Nonvocal")
timeseries_other$vocal <- ifelse(timeseries_other$vocal=="Y", "Vocal", "Nonvocal")
ggplot(timeseries_other, aes(x=round(seconds), y=pMTGL_univariatecluster_scaled)) +
annotate(xmin = 6, xmax = 8, ymin = -Inf, ymax = Inf, geom = 'rect', alpha = 0.4, fill="#F0E442") +
geom_smooth(aes(color=vocal, fill=vocal))+
theme_classic() +
xlab("Time (s)") +
ylab("Scaled ROI Activity") +
ggtitle("pMTG Left Cluster") +#update labels
theme(plot.title = element_text(face="bold", hjust = 0.5, size=18), axis.text=element_text(size=15), axis.title=element_text(size=15))+
#geom_label_repel(aes(label = vocal, x=seconds, y=scaled, color=vocal),
#                na.rm = TRUE,
#     data=label,
#              min.segment.length = Inf,
#  point.size = NA,
#      #        family="Arial",
#   size=8
#   ) +
scale_color_manual(values = c("#D55E00", "#56B4E9"))+
scale_fill_manual(values = c("#D55E00", "#56B4E9"))+
theme(legend.position = "none")
timeseries_other$pMTGL_univariatecluster_scaled
ggplot(timeseries_other, aes(x=round(seconds), y=pMTGL_univariatecluster_scaled)) +
annotate(xmin = 6, xmax = 8, ymin = -Inf, ymax = Inf, geom = 'rect', alpha = 0.4, fill="#F0E442") +
geom_smooth(aes(color=vocal, fill=vocal))+
theme_classic() +
xlab("Time (s)") +
ylab("Scaled ROI Activity") +
ggtitle("pMTG Left Cluster") +#update labels
theme(plot.title = element_text(face="bold", hjust = 0.5, size=18), axis.text=element_text(size=15), axis.title=element_text(size=15))+
#geom_label_repel(aes(label = vocal, x=seconds, y=scaled, color=vocal),
#                na.rm = TRUE,
#     data=label,
#              min.segment.length = Inf,
#  point.size = NA,
#      #        family="Arial",
#   size=8
#   ) +
scale_color_manual(values = c("#D55E00", "#56B4E9"))+
scale_fill_manual(values = c("#D55E00", "#56B4E9"))+
theme(legend.position = "none")
ggplot(timeseries_other, aes(x=round(seconds), y=pMTGL_univariatecluster_scaled)) +
annotate(xmin = 6, xmax = 8, ymin = -Inf, ymax = Inf, geom = 'rect', alpha = 0.4, fill="#F0E442") +
geom_smooth(aes(color=vocal, fill=vocal))+
theme_classic() +
xlab("Time (s)") +
ylab("Scaled ROI Activity") +
ggtitle("pMTG Left Cluster") +#update labels
theme(plot.title = element_text(face="bold", hjust = 0.5, size=18), axis.text=element_text(size=15), axis.title=element_text(size=15))+
geom_label_repel(aes(label = vocal, x=seconds, y=scaled, color=vocal),
na.rm = TRUE,
data=label,
min.segment.length = Inf,
point.size = NA,
family="Arial",
size=8
) +
scale_color_manual(values = c("#D55E00", "#56B4E9"))+
scale_fill_manual(values = c("#D55E00", "#56B4E9"))+
theme(legend.position = "none")
View(timeseries_other)
ggplot(timeseries_other, aes(x=round(seconds), y=pMTGL_univariatecluster_scaled)) +
annotate(xmin = 6, xmax = 8, ymin = -Inf, ymax = Inf, geom = 'rect', alpha = 0.4, fill="#F0E442") +
geom_smooth(aes(color=vocal, fill=vocal))
## doing roi-analyses for all music (i.e. vocal v non-vocal)
timeseries_other <- subset(timeseries_scaled, self_other=="other")
label<-
expand.grid(
vocal=c("Nonvocal", "Vocal"),
seconds=12
)
label$scaled <- ifelse(label$vocal=="Vocal", 1.25, 0.25)
timeseries_stimother$vocal <- ifelse(timeseries_stimother$vocal=="Y", "Vocal", "Nonvocal")
timeseries_other$vocal <- ifelse(timeseries_other$vocal=="Y", "Vocal", "Nonvocal")
ggplot(timeseries_other, aes(x=round(seconds), y=pMTGL_univariatecluster_scaled)) +
annotate(xmin = 6, xmax = 8, ymin = -Inf, ymax = Inf, geom = 'rect', alpha = 0.4, fill="#F0E442") +
geom_smooth(aes(color=vocal, fill=vocal))+
theme_classic() +
xlab("Time (s)") +
ylab("Scaled ROI Activity") +
ggtitle("pMTG Left Cluster") +#update labels
theme(plot.title = element_text(face="bold", hjust = 0.5, size=18), axis.text=element_text(size=15), axis.title=element_text(size=15))+
#geom_label_repel(aes(label = vocal, x=seconds, y=scaled, color=vocal),
#                na.rm = TRUE,
#     data=label,
#              min.segment.length = Inf,
#  point.size = NA,
#      #        family="Arial",
#   size=8
#   ) +
scale_color_manual(values = c("#D55E00", "#56B4E9"))+
scale_fill_manual(values = c("#D55E00", "#56B4E9"))+
theme(legend.position = "none")
#merge MIR features w/ MIR peaks
MIR_timeseries <- merge(timeseries_scaled_peak, MIR, by="Stim")
test<-lmer(pMTGR_univariatecluster_scaled ~ (language) +  (RMS_energy) + (event_density) + (language + (RMS_energy) + (event_density)|SUBID), data=MIR_timeseries) #random  intercepts + slopes
View(timeseries)
test<-lmer(pMTGR_univariatecluster_scaled~older_younger*vocal + RMS_energy + (1|SUBID), data=MIR_timeseries) #random intercepts
test<-lmer(pMTGR_univariatecluster_scaled~older_younger + RMS_energy + (1|SUBID), data=MIR_timeseries) #random intercepts
summary(test)
test<-lmer(pMTGR_univariatecluster_scaled~older_younger*vocal.y + (1|SUBID), data=MIR_timeseries) #random intercepts
summary(test)
test<-lmer(pMTGR_univariatecluster_scaled~older_younger*vocal.y + (1|SUBID), data=timeseries_scaled_peak) #random intercepts
test<-lmer(pMTGR_univariatecluster_scaled~older_younger*vocal + (1|SUBID), data=timeseries_scaled_peak) #random intercepts
summary(test)
View(MIR)
View(timeseries_scaled_peak)
timeseries_language <-
MIR_timeseries %>%
subset(Stim == 8 | Stim == 15 | Stim == 10 | Stim == 11 | Stim == 12 | Stim == 13 )
timeseries_language$language <- ifelse(timeseries_language$Stim == 8 | timeseries_language$Stim == 15, "Non-English", "English")
test<-lmer((scaled) ~ (language) +  (RMS_energy) + (event_density) + (language + (RMS_energy) + (event_density)|SUBID), data=MIR_timeseries) #random  intercepts + slopes
test<-lmer((pMTGL_univariatecluster_scaled) ~ (language) +  (RMS_energy) + (event_density) + (language + (RMS_energy) + (event_density)|SUBID), data=MIR_timeseries) #random  intercepts + slopes
test<-lmer((pMTGL_univariatecluster_scaled) ~ (language) +  (RMS_energy) + (event_density) + (language + (RMS_energy) + (event_density)|SUBID), data=timeseries_language) #random  intercepts + slopes
summary(test)
test<-lmer((pMTGR_univariatecluster_scaled) ~ (language) +  (RMS_energy) + (event_density) + (language + (RMS_energy) + (event_density)|SUBID), data=timeseries_language) #random  intercepts + slopes
test<-lmer((pMTGR_univariatecluster_scaled) ~ (language) +  (RMS_energy) + (event_density) + (language + (RMS_energy) + (event_density)|SUBID), data=timeseries_language, control=lmerControl(optimizer="bobyqa")) #random  intercepts + slopes
summary(test)
timeseries_language <-
MIR_timeseries%>%
subset(Stim == 8 | Stim == 15 | Stim == 9 | Stim == 7 | Stim == 14 | Stim == 17 )
timeseries_language$language <- ifelse(timeseries_language$Stim == 8 | timeseries_language$Stim == 15, "Non-English", "Non-Vocal")
test<-lmer((pMTGL_univariatecluster_scaled) ~ language + (RMS_energy) + (event_density) + (1|SUBID), data=MIR_timeseries) #random intercepts
test<-lmer((pMTGL_univariatecluster_scaled) ~ language + (RMS_energy) + (event_density) + (1|SUBID), data=timeseries_language) #random intercepts
summary(test)
test<-lmer((pMTGR_univariatecluster_scaled) ~ language + (RMS_energy) + (event_density) + (1|SUBID), data=timeseries_language) #random intercepts
summary(test)
test<-lmer((pMTGL_univariatecluster_scaled) ~ language + (RMS_energy) + (event_density) + (1|SUBID), data=timeseries_language) #random intercepts
summary(test)
View(timeseries_language)
test<-lmer((pMTGL_univariatecluster_scaled) ~ language + (RMS_energy) + (event_density) + (language + (RMS_energy) + (event_density)|SUBID), data=timeseries_language) #random intercepts
test<-lmer((pMTGL_univariatecluster_scaled) ~ language + (RMS_energy) + (event_density) + (language + (RMS_energy) + (event_density)|SUBID), data=timeseries_language, control=lmerControl(optimizer="bobyqa")) #random intercepts
test<-lmer((pMTGL_univariatecluster_scaled) ~ language + (RMS_energy) + (event_density) + (language + (RMS_energy) |SUBID), data=timeseries_language, control=lmerControl(optimizer="bobyqa")) #random intercepts
summary(test)
timeseries_language <-
MIR_timeseries%>%
subset(Stim == 10 | Stim == 11 | Stim == 12 | Stim == 13  | Stim == 9 | Stim == 7 | Stim == 14 | Stim == 17 )
timeseries_language$language <- ifelse(timeseries_language$Stim == 10 | timeseries_language$Stim == 11 | timeseries_language$Stim == 12 | timeseries_language$Stim == 13, "English", "Non-Vocal")
test<-lmer(pMTGL_univariatecluster_scaled ~ language + RMS_energy + event_density + (language|SUBID), data=timeseries_language) #random intercepts
summary(test)
test<-lmer(pMTGR_univariatecluster_scaled ~ language + RMS_energy + event_density + (language|SUBID), data=timeseries_language) #random intercepts
summary(test)
m1 <- lmer(scale(liking) ~ vocal + (vocal|participant_ID), data=vocal_nonvocal_other)
ggplot(timeseries_language, aes(x=round(seconds), y=pMTGL_univariatecluster_scaled)) +
annotate(xmin = 6, xmax = 8, ymin = -Inf, ymax = Inf, geom = 'rect', alpha = 0.3, fill="#F0E442")+
geom_smooth(aes(color=factor(vocals, labels = c("English Vocals", "Non-English Vocals")), fill=factor(vocals, labels = c("English Vocals", "Non-English Vocals"))), alpha=0.2) +
theme_classic()+
labs(x= "Time (s)", y="Scaled ROI Activity", color="stimulus type", fill="stimulus type")+
ggtitle("Right pMTG Cluster") +
theme(plot.title = element_text(face="bold", size = 18, hjust=0.5), axis.text=element_text(size=15), axis.title=element_text(size=15)) +
scale_color_manual(values=c("#CC79A7", "#009E73")) +
scale_fill_manual(values=c("#CC79A7", "#009E73"))
ggplot(timeseries_language, aes(x=round(seconds), y=pMTGL_univariatecluster_scaled)) +
annotate(xmin = 6, xmax = 8, ymin = -Inf, ymax = Inf, geom = 'rect', alpha = 0.3, fill="#F0E442")+
geom_smooth(aes(color=factor(language, labels = c("English Vocals", "Non-English Vocals")), fill=factor(language, labels = c("English Vocals", "Non-English Vocals"))), alpha=0.2) +
theme_classic()+
labs(x= "Time (s)", y="Scaled ROI Activity", color="stimulus type", fill="stimulus type")+
ggtitle("Right pMTG Cluster") +
theme(plot.title = element_text(face="bold", size = 18, hjust=0.5), axis.text=element_text(size=15), axis.title=element_text(size=15)) +
scale_color_manual(values=c("#CC79A7", "#009E73")) +
scale_fill_manual(values=c("#CC79A7", "#009E73"))
timeseries_languageplot <-
timeseries_scaled %>%
subset(Stim == 8 | Stim == 15 | Stim == 10 | Stim == 11 | Stim == 12 | Stim == 13 )
label<-
expand.grid(
language=c("English Vocals", "Non-English Vocals"),
seconds=12
)
ggplot(timeseries_languageplot, aes(x=round(seconds), y=pMTGL_univariatecluster_scaled)) +
annotate(xmin = 6, xmax = 8, ymin = -Inf, ymax = Inf, geom = 'rect', alpha = 0.3, fill="#F0E442")+
geom_smooth(aes(color=factor(language, labels = c("English Vocals", "Non-English Vocals")), fill=factor(language, labels = c("English Vocals", "Non-English Vocals"))), alpha=0.2) +
theme_classic()+
labs(x= "Time (s)", y="Scaled ROI Activity", color="stimulus type", fill="stimulus type")+
ggtitle("Right pMTG Cluster") +
theme(plot.title = element_text(face="bold", size = 18, hjust=0.5), axis.text=element_text(size=15), axis.title=element_text(size=15)) +
scale_color_manual(values=c("#CC79A7", "#009E73")) +
scale_fill_manual(values=c("#CC79A7", "#009E73"))
timeseries_languageplot$language <- ifelse(timeseries_languageplot$Stim == 8 | timeseries_languageplot$Stim == 15, "Non-English", "English")
ggplot(timeseries_languageplot, aes(x=round(seconds), y=pMTGL_univariatecluster_scaled)) +
annotate(xmin = 6, xmax = 8, ymin = -Inf, ymax = Inf, geom = 'rect', alpha = 0.3, fill="#F0E442")+
geom_smooth(aes(color=factor(language, labels = c("English Vocals", "Non-English Vocals")), fill=factor(language, labels = c("English Vocals", "Non-English Vocals"))), alpha=0.2) +
theme_classic()+
labs(x= "Time (s)", y="Scaled ROI Activity", color="stimulus type", fill="stimulus type")+
ggtitle("Right pMTG Cluster") +
theme(plot.title = element_text(face="bold", size = 18, hjust=0.5), axis.text=element_text(size=15), axis.title=element_text(size=15)) +
scale_color_manual(values=c("#CC79A7", "#009E73")) +
scale_fill_manual(values=c("#CC79A7", "#009E73"))
ggplot(timeseries_languageplot, aes(x=round(seconds), y=pMTGR_univariatecluster_scaled)) +
annotate(xmin = 6, xmax = 8, ymin = -Inf, ymax = Inf, geom = 'rect', alpha = 0.3, fill="#F0E442")+
geom_smooth(aes(color=factor(language, labels = c("English Vocals", "Non-English Vocals")), fill=factor(language, labels = c("English Vocals", "Non-English Vocals"))), alpha=0.2) +
theme_classic()+
labs(x= "Time (s)", y="Scaled ROI Activity", color="stimulus type", fill="stimulus type")+
ggtitle("Right pMTG Cluster") +
theme(plot.title = element_text(face="bold", size = 18, hjust=0.5), axis.text=element_text(size=15), axis.title=element_text(size=15)) +
scale_color_manual(values=c("#CC79A7", "#009E73")) +
scale_fill_manual(values=c("#CC79A7", "#009E73"))
timeseries_languageplot <- timeseries_scaled %>%
subset(Stim == 8 | Stim == 15 | Stim == 9 | Stim == 7 | Stim == 14 | Stim == 17 )
timeseries_languageplot$language <- ifelse(timeseries_languageplot$Stim == 8 | timeseries_languageplot$Stim == 15, "Non-English", "Non-Vocal")
ggplot(timeseries_languageplot, aes(x=round(seconds), y=pMTGR_univariatecluster_scaled)) +
annotate(xmin = 6, xmax = 8, ymin = -Inf, ymax = Inf, geom = 'rect', alpha = 0.3, fill="#F0E442")+
geom_smooth(aes(color=factor(language, labels = c("English Vocals", "Non-English Vocals")), fill=factor(language, labels = c("English Vocals", "Non-English Vocals"))), alpha=0.2) +
theme_classic()+
labs(x= "Time (s)", y="Scaled ROI Activity", color="stimulus type", fill="stimulus type")+
ggtitle("Right pMTG Cluster") +
theme(plot.title = element_text(face="bold", size = 18, hjust=0.5), axis.text=element_text(size=15), axis.title=element_text(size=15)) +
scale_color_manual(values = c("#D55E00", "#56B4E9"))+
scale_fill_manual(values = c("#D55E00", "#56B4E9"))
ggplot(timeseries_languageplot, aes(x=round(seconds), y=pMTGR_univariatecluster_scaled)) +
annotate(xmin = 6, xmax = 8, ymin = -Inf, ymax = Inf, geom = 'rect', alpha = 0.3, fill="#F0E442")+
geom_smooth(aes(color=factor(language, labels = c("Non-English Vocals", "Nonvocal")), fill=factor(language, labels = c("Non-English Vocals", "Nonvocal"))), alpha=0.2) +
theme_classic()+
labs(x= "Time (s)", y="Scaled ROI Activity", color="stimulus type", fill="stimulus type")+
ggtitle("Right pMTG Cluster") +
theme(plot.title = element_text(face="bold", size = 18, hjust=0.5), axis.text=element_text(size=15), axis.title=element_text(size=15)) +
scale_color_manual(values = c("#D55E00", "#56B4E9"))+
scale_fill_manual(values = c("#D55E00", "#56B4E9"))
ggplot(timeseries_languageplot, aes(x=round(seconds), y=pMTGR_univariatecluster_scaled)) +
annotate(xmin = 6, xmax = 8, ymin = -Inf, ymax = Inf, geom = 'rect', alpha = 0.3, fill="#F0E442")+
geom_smooth(aes(color=factor(language, labels = c("Non-English Vocals", "Nonvocal")), fill=factor(language, labels = c("Non-English Vocals", "Nonvocal"))), alpha=0.2) +
theme_classic()+
labs(x= "Time (s)", y="Scaled ROI Activity", color="stimulus type", fill="stimulus type")+
ggtitle("Right pMTG Cluster") +
theme(plot.title = element_text(face="bold", size = 18, hjust=0.5), axis.text=element_text(size=15), axis.title=element_text(size=15)) +
scale_color_manual(values = c("#009E73", "#D55E00"))+
scale_fill_manual(values = c("#009E73", "#D55E00"))
timeseries_language <-
MIR_timeseries %>%
subset(Stim == 8 | Stim == 15 | Stim == 9 | Stim == 7 | Stim == 14 | Stim == 17 )
timeseries_language$language <- ifelse(timeseries_language$Stim == 8 | timeseries_language$Stim == 15, "Non-English", "Non-Vocal")
test<-lmer((pMTGL_univariatecluster_scaled) ~ language + (RMS_energy) + (event_density) + (language + (RMS_energy) |SUBID), data=timeseries_language, control=lmerControl(optimizer="bobyqa")) #random intercepts
summary(test)
test<-lmer((pMTGL_univariatecluster_scaled) ~ language + (1 |SUBID), data=timeseries_language, control=lmerControl(optimizer="bobyqa")) #random intercepts
summary(test)
test<-lmer((pMTGL_univariatecluster_scaled) ~ (language) + (language|SUBID), data=timeseries_language) #random  intercepts + slopes
summary(test)
test<-lmer((pMTGL_univariatecluster_scaled) ~ (language) +  (RMS_energy) + (event_density) + (language + (RMS_energy) + (event_density)|SUBID), data=timeseries_language) #random  intercepts + slopes
timeseries_language <-
MIR_timeseries %>%
subset(Stim == 8 | Stim == 15 | Stim == 10 | Stim == 11 | Stim == 12 | Stim == 13 )
timeseries_language$language <- ifelse(timeseries_language$Stim == 8 | timeseries_language$Stim == 15, "Non-English", "English")
test<-lmer((pMTGL_univariatecluster_scaled) ~ (language) + (language|SUBID), data=timeseries_language) #random  intercepts + slopes
summary(test)
test<-lmer((pMTGL_univariatecluster_scaled) ~ (language) +  (RMS_energy) + (event_density) + (language + (RMS_energy) + (event_density)|SUBID), data=timeseries_language,control=lmerControl(optimizer="bobyqa")) #random  intercepts + slopes
summary(test)
test<-lmer((pMTGL_univariatecluster_scaled) ~ (language) +  scale(RMS_energy) + scale(event_density) + (language + scale(RMS_energy) + scale(event_density)|SUBID), data=timeseries_language,control=lmerControl(optimizer="bobyqa")) #random  intercepts + slopes
summary(test)
test<-lmer((pMTGR_univariatecluster_scaled) ~ (language) +  (RMS_energy) + (event_density) + (language + (RMS_energy) + (event_density)|SUBID), data=timeseries_language, control=lmerControl(optimizer="bobyqa")) #random  intercepts + slopes
summary(test)
test<-lmer((scale(pMTGL_univariatecluster_scaled)) ~ (language) +  scale(RMS_energy) + scale(event_density) + (language + scale(RMS_energy) + scale(event_density)|SUBID), data=timeseries_language,control=lmerControl(optimizer="bobyqa")) #random  intercepts + slopes
summary(test)
test<-lmer(scale(pMTGL_univariatecluster_scaled) ~ (language) + (language|SUBID), data=timeseries_language) #random  intercepts + slopes
summary(test)
test<-lmer(((pMTGL_univariatecluster_scaled)) ~ (language) +  scale(RMS_energy) + scale(event_density) + (language + scale(RMS_energy) + scale(event_density)|SUBID), data=timeseries_language,control=lmerControl(optimizer="bobyqa")) #random  intercepts + slopes
test<-lmer(((pMTGL_univariatecluster_scaled)) ~ (language) +  scale(RMS_energy) + scale(event_density) + (language + scale(RMS_energy) + scale(event_density)|SUBID), data=timeseries_language,control=lmerControl(optimizer="bobyqa")) #random  intercepts + slopes
summary(test)
test<-lmer((pMTGR_univariatecluster_scaled) ~ (language) + (language +|SUBID), data=timeseries_language, control=lmerControl(optimizer="bobyqa")) #random  intercepts + slopes
test<-lmer((pMTGR_univariatecluster_scaled) ~ (language) + (language | SUBID), data=timeseries_language, control=lmerControl(optimizer="bobyqa")) #random  intercepts + slopes
summary(test)
test<-lmer((pMTGR_univariatecluster_scaled) ~ (language) +  (RMS_energy) + (event_density) + (language + (RMS_energy) + (event_density)|SUBID), data=timeseries_language, control=lmerControl(optimizer="bobyqa")) #random  intercepts + slopes
summary(test)
timeseries_languageplot <-
timeseries_scaled %>%
subset(Stim == 8 | Stim == 15 | Stim == 10 | Stim == 11 | Stim == 12 | Stim == 13 )
timeseries_languageplot$language <- ifelse(timeseries_languageplot$Stim == 8 | timeseries_languageplot$Stim == 15, "Non-English", "English")
ggplot(timeseries_languageplot, aes(x=round(seconds), y=pMTGL_univariatecluster_scaled)) +
annotate(xmin = 6, xmax = 8, ymin = -Inf, ymax = Inf, geom = 'rect', alpha = 0.3, fill="#F0E442")+
geom_smooth(aes(color=factor(language, labels = c("English Vocals", "Non-English Vocals")), fill=factor(language, labels = c("English Vocals", "Non-English Vocals"))), alpha=0.2) +
theme_classic()+
labs(x= "Time (s)", y="Scaled ROI Activity", color="stimulus type", fill="stimulus type")+
ggtitle("Left pMTG Cluster") +
theme(plot.title = element_text(face="bold", size = 18, hjust=0.5), axis.text=element_text(size=15), axis.title=element_text(size=15)) +
scale_color_manual(values=c("#CC79A7", "#009E73")) +
scale_fill_manual(values=c("#CC79A7", "#009E73"))
ggplot(timeseries_languageplot, aes(x=round(seconds), y=pMTGL_univariatecluster_scaled)) +
annotate(xmin = 6, xmax = 8, ymin = -Inf, ymax = Inf, geom = 'rect', alpha = 0.3, fill="#F0E442")+
geom_smooth(aes(color=factor(language, labels = c("English Vocals", "Non-English Vocals")), fill=factor(language, labels = c("English Vocals", "Non-English Vocals"))), alpha=0.2) +
theme_classic()+
labs(x= "Time (s)", y="Scaled ROI Activity", color="stimulus type", fill="stimulus type")+
ggtitle("Left pMTG Cluster") +
theme(plot.title = element_text(face="bold", size = 18, hjust=0.5), axis.text=element_text(size=15), axis.title=element_text(size=15)) +
scale_color_manual(values=c("#CC79A7", "#009E73")) +
scale_fill_manual(values=c("#CC79A7", "#009E73"))
ggplot(timeseries_languageplot, aes(x=round(seconds), y=pMTGR_univariatecluster_scaled)) +
annotate(xmin = 6, xmax = 8, ymin = -Inf, ymax = Inf, geom = 'rect', alpha = 0.3, fill="#F0E442")+
geom_smooth(aes(color=factor(language, labels = c("English Vocals", "Non-English Vocals")), fill=factor(language, labels = c("English Vocals", "Non-English Vocals"))), alpha=0.2) +
theme_classic()+
labs(x= "Time (s)", y="Scaled ROI Activity", color="stimulus type", fill="stimulus type")+
ggtitle("Right pMTG Cluster") +
theme(plot.title = element_text(face="bold", size = 18, hjust=0.5), axis.text=element_text(size=15), axis.title=element_text(size=15)) +
scale_color_manual(values=c("#CC79A7", "#009E73")) +
scale_fill_manual(values=c("#CC79A7", "#009E73"))
timeseries_language <-
MIR_timeseries %>%
subset(Stim == 8 | Stim == 15 | Stim == 9 | Stim == 7 | Stim == 14 | Stim == 17 )
timeseries_language$language <- ifelse(timeseries_language$Stim == 8 | timeseries_language$Stim == 15, "Non-English", "Non-Vocal")
test<-lmer((pMTGL_univariatecluster_scaled) ~ language + (RMS_energy) + (event_density) + (language + (RMS_energy) |SUBID), data=timeseries_language, control=lmerControl(optimizer="bobyqa")) #random intercepts
summary(test)
test<-lmer((pMTGL_univariatecluster_scaled) ~ language  + ((RMS_energy) |SUBID), data=timeseries_language, control=lmerControl(optimizer="bobyqa")) #random intercepts
summary(test)
test<-lmer((pMTGL_univariatecluster_scaled) ~ language + (RMS_energy) + (event_density) + (language + (RMS_energy) |SUBID), data=timeseries_language, control=lmerControl(optimizer="bobyqa")) #random intercepts
summary(test)
test<-lmer((pMTGL_univariatecluster_scaled) ~ language + (1|SUBID), data=timeseries_language, control=lmerControl(optimizer="bobyqa")) #random intercepts
summary(test)
test<-lmer((pMTGL_univariatecluster_scaled) ~ language + (RMS_energy) + (event_density) + (language + (RMS_energy) |SUBID), data=timeseries_language, control=lmerControl(optimizer="bobyqa")) #random intercepts
summary(test)
timeseries_languageplot <- timeseries_scaled %>%
subset(Stim == 8 | Stim == 15 | Stim == 9 | Stim == 7 | Stim == 14 | Stim == 17 )
timeseries_languageplot$language <- ifelse(timeseries_languageplot$Stim == 8 | timeseries_languageplot$Stim == 15, "Non-English", "Non-Vocal")
ggplot(timeseries_languageplot, aes(x=round(seconds), y=pMTGR_univariatecluster_scaled)) +
annotate(xmin = 6, xmax = 8, ymin = -Inf, ymax = Inf, geom = 'rect', alpha = 0.3, fill="#F0E442")+
geom_smooth(aes(color=factor(language, labels = c("Non-English Vocals", "Nonvocal")), fill=factor(language, labels = c("Non-English Vocals", "Nonvocal"))), alpha=0.2) +
theme_classic()+
labs(x= "Time (s)", y="Scaled ROI Activity", color="stimulus type", fill="stimulus type")+
ggtitle("Right pMTG Cluster") +
theme(plot.title = element_text(face="bold", size = 18, hjust=0.5), axis.text=element_text(size=15), axis.title=element_text(size=15)) +
scale_color_manual(values = c("#009E73", "#D55E00"))+
scale_fill_manual(values = c("#009E73", "#D55E00"))
ggplot(timeseries_languageplot, aes(x=round(seconds), y=pMTGL_univariatecluster_scaled)) +
annotate(xmin = 6, xmax = 8, ymin = -Inf, ymax = Inf, geom = 'rect', alpha = 0.3, fill="#F0E442")+
geom_smooth(aes(color=factor(language, labels = c("Non-English Vocals", "Nonvocal")), fill=factor(language, labels = c("Non-English Vocals", "Nonvocal"))), alpha=0.2) +
theme_classic()+
labs(x= "Time (s)", y="Scaled ROI Activity", color="stimulus type", fill="stimulus type")+
ggtitle("Left pMTG Cluster") +
theme(plot.title = element_text(face="bold", size = 18, hjust=0.5), axis.text=element_text(size=15), axis.title=element_text(size=15)) +
scale_color_manual(values = c("#009E73", "#D55E00"))+
scale_fill_manual(values = c("#009E73", "#D55E00"))
timeseries_language <-
MIR_timeseries%>%
subset(Stim == 10 | Stim == 11 | Stim == 12 | Stim == 13  | Stim == 9 | Stim == 7 | Stim == 14 | Stim == 17 )
timeseries_language$language <- ifelse(timeseries_language$Stim == 10 | timeseries_language$Stim == 11 | timeseries_language$Stim == 12 | timeseries_language$Stim == 13, "English", "Non-Vocal")
test<-lmer(pMTGL_univariatecluster_scaled ~ language + RMS_energy + event_density + (language|SUBID), data=timeseries_language) #random intercepts
summary(test)
test<-lmer(pMTGL_univariatecluster_scaled ~ language + RMS_energy + event_density + (RMS_energy + event_density + language|SUBID), data=timeseries_language) #random intercepts
test<-lmer(pMTGL_univariatecluster_scaled ~ language + RMS_energy + event_density + (RMS_energy + event_density + language|SUBID), data=timeseries_language,control=lmerControl(optimizer="bobyqa")) #random intercepts
summary(test)
test<-lmer(pMTGR_univariatecluster_scaled ~ language + RMS_energy + event_density + (language|SUBID), data=timeseries_language) #random intercepts
summary(test)
test<-lmer(pMTGR_univariatecluster_scaled~older_younger*vocal.y + (1|SUBID), data=MIR_timeseries) #random intercepts
summary(test)
test<-lmer(pMTGR_univariatecluster_scaled~older_younger*vocal.y + (1|SUBID), data=MIR_timeseries) #random intercepts
summary(test)
test<-lmer(pMTGR_univariatecluster_scaled~older_younger*vocal.y + (vocal.y|SUBID), data=MIR_timeseries) #random intercepts
summary(test)
test<-lmer(pMTGL_univariatecluster_scaled~older_younger*vocal.y + (vocal.y|SUBID), data=MIR_timeseries) #random intercepts
summary(test)
test<-lmer(pMTGR_univariatecluster_scaled~older_younger*vocal.y + RMS_energy + evenet_density + (vocal.y|SUBID), data=MIR_timeseries)
test<-lmer(pMTGR_univariatecluster_scaled~older_younger*vocal.y + RMS_energy + event_density + (vocal.y|SUBID), data=MIR_timeseries)
summary(test)
test<-lmer(pMTGR_univariatecluster_scaled~older_younger*vocal.y + RMS_energy + event_density + (vocal.y + RMS_energy + event_density|SUBID), data=MIR_timeseries)
summary(test)
test<-lmer(pMTGR_univariatecluster_scaled~older_younger*vocal.y + RMS_energy + event_density + (vocal.y + RMS_energy + event_density|SUBID), data=MIR_timeseries)
test<-lmer(pMTGR_univariatecluster_scaled~older_younger*vocal.y + RMS_energy + event_density + (vocal.y + RMS_energy + event_density|SUBID), data=MIR_timeseries, control=lmerControl(optimizer="bobyqa"))
summary(test)
test<-lmer(pMTGL_univariatecluster_scaled~older_younger*vocal.y + RMS_energy + event_density + (vocal.y + RMS_energy + event_density|SUBID), data=MIR_timeseries)
test<-lmer(pMTGL_univariatecluster_scaled~older_younger*vocal.y + RMS_energy + event_density + (vocal.y + RMS_energy + event_density|SUBID), data=MIR_timeseries,control=lmerControl(optimizer="bobyqa"))
summary(test)
test<-lmer(pMTGL_univariatecluster_scaled~ vocal.y + RMS_energy + event_density + (vocal.y + RMS_energy + event_density|SUBID), data=MIR_timeseries,control=lmerControl(optimizer="bobyqa"))
summary(test)
vocal_nonvocal_other <-
vocal_nonvocal %>%
subset(self_other=="other") %>%
subset(MCI!="Y")
View(vocal_nonvocal)
View(MIR_timeseries)
View(vocal_nonvocal)
View(MIR_timeseries)
